import java.util.Scanner;  // Import the Scanner class

/*Project for a cost share calculator. First edition.
Upcoming features & fixes :
1. assigning costs to involved  party members.
2. Move code to different classes or methods for readability

*/

public class Main {

    public static void main(String[] args){
        Scanner input = new Scanner(System.in);  // Create a Scanner object
        //declaring variables and arrays.
        System.out.println("How many are you?");
        int numPeople = validInteger(); //Stores number if a valid number is submitted.


        String[] allNames = new String[numPeople];//Array with all names.
        int[] allCosts = new int[numPeople]; //declaring array to store costs.

        //Adding names in Array
        for (int i = 0; i < numPeople; i++) {
            System.out.printf("Name %d:", i+1);
            String name = input.nextLine();
            allNames[i] = capitalizeFirstChar(name);
        }

        //sentinel controlled loop for
        // 1. registering costs and
        // 2. who paid for the cost
        System.out.println("Enter cost: (Enter -1 to quit)");
        int kostnad = validInteger();
        while ( kostnad != -1) {
            System.out.println("Enter the number of the person who paid");
            for (int j = 0; j < numPeople; j++) {
                System.out.printf("%d\t%s%n", j + 1, allNames[j]);//Show all names next to number
            }
            int whoPaid = validInteger() -1; //user registers who paid
            allCosts[whoPaid] += kostnad; //add cost to index for person who paid.

            System.out.println("Enter cost: (Enter -1 to quit)");
            kostnad = validInteger();
        } //end while loop

        //printing names and what they paid for
        System.out.println("You have paid the following:");
        for (int k = 0; k < numPeople; k++) {
            System.out.printf("%-15s\t%d%n", allNames[k], allCosts[k]);
        }

        //Calculating total and 'fair share'= average
        int total = findSum(allCosts);
        int average = total / numPeople;
        int[] difference = new int[numPeople];//Array for storing difference between fair share to what actually was paid

        //calculating what everyone should pay or be paid
        for (int n = 0; n < numPeople; n++) {
            difference[n] = average - allCosts[n]; //compares fair share to what actually was paid

            if (difference[n] > 0) {
                System.out.printf("%s should pay a total of %d to be even%n", allNames[n], difference[n]);
            } else if (difference[n] < 0) {
                System.out.printf("%s should receive a total of %d to be even%n", allNames[n], -1 *difference[n]);
            }else {
                System.out.printf("%s is already even%n", allNames[n]);
            }
        }//end for loop

    }//end main
    public static int findSum(int[] array) {
        //Adds the total of all values in an array and returns the total
        int sum = 0;
        for (int value : array) {
            sum += value;
        }
        return sum;
        
    }//end findSum
    public static int validInteger() {
        //Method checks/converts input to an integer, if input cannot be converted, the user is asked to input again.
            Scanner scanner = new Scanner(System.in);
            boolean validInput = false;

            while (validInput  != true){
                String input = scanner.nextLine();
                try {
                    int number = Integer.parseInt(input);
                    validInput = true;
                    return number;
                } catch (NumberFormatException e) {
                    System.out.println("Invalid input. Please enter a valid whole number:");
                }
            }
        return 0;
        }//end InputToInteger

    public static String capitalizeFirstChar(String str) {
        if (str == null || str.isEmpty()) {
            return str;
        } else {
            return str.substring(0, 1).toUpperCase() + str.substring(1);
        }
    }//end capitalizeFirstChar
}//end class
